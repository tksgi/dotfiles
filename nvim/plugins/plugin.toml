[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = 'call hook#add#denite#load()'

[[plugins]]
repo = 'Shougo/neomru.vim'

# [[plugins]]
# repo = 'kmnk/denite-dirmark'
# on_ft = 'denite.nvim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

# [[plugins]]
# repo = 'scrooloose/nerdtree'
# hook_add = 'let NERDTreeShowHidden=1'

# [[plugins]]
# repo = 'Xuyuanp/nerdtree-git-plugin'
# depends = 'scrooloose/nerdtree'

[[plugins]]
repo = 'lambdalisue/fern.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'lambdalisue/fern-bookmark.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'vim-scripts/grep.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = 'call hook#add#quickrun#load()'


[[plugins]]
repo = 'Yggdroot/indentLine'

# [[plugins]]
# repo = 'majutsushi/tagbar'
# hook_add = 'let g:tagbar_sort = 0'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = 'call hook#add#vim_airline#load()'
# depends = ['tagbar', 'vim-fugitive']
depends = ['vim-fugitive']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline'
hook_add = '''let g:airline_theme='molokai' '''

[[plugins]]
repo = 'patstockwell/vim-monokai-tasty'

[[plugins]]
repo = 'tomasr/molokai'

# [[plugins]]
# repo = 'vim-scripts/gtags.vim'
# hook_add = 'call hook#add#gtags#load()'

# [[plugins]]
# repo = 'ozelentok/denite-gtags'

[[plugins]]
repo = 'yuratomo/w3m.vim'
hook_add = '''
let g:w3m#external_browser = '/Applications/Firefox.app/Contents/MacOS/firefox'
'''
# help
# https://github.com/yuratomo/w3m.vim

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'


[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'tyru/eskk.vim'
hook_add = '''
" AquaSKKserverを利用する
"let g:eskk#server = {
"  \   'host': 'localhost',
"  \   'port': 5510,
"  \}
let g:eskk#server = {
  \   'host': 'localhost',
  \   'port': 55100,
  \}
let g:eskk#dictionary = { 'path': "~/.skk/.skk-jisyo", 'sorted': 0, 'encoding': 'utf-8', }
let g:eskk#large_dictionary = { 'path': "~/.skk/SKK-JISYO.L", 'sorted': 1, 'encoding': 'utf-8', }
let g:eskk#show_candidates_count = 1
'''
# google-ime-skk
# 辞書ファイルの生成
# https://eidera.com/blog/2019/03/15/skkdic_for_eskkvim/

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
'''

# なんだっけこれ？
[[plugins]]
repo = 'rbgrouleff/bclose.vim'

# [[plugins]]
# repo = 'iberianpig/tig-explorer.vim'
# depends = 'bclose.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'junegunn/fzf'
dir = '~/.fzf'
do = './install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'godlygeek/tabular'

# [[plugins]]
# repo = 'ozelentok/deoplete-gtags'

# [[plugins]]
# repo = 'Shougo/deol.nvim'

[[plugins]]
repo = 'skanehira/translate.vim'

[[plugins]]
repo = 'willelz/badapple.nvim'

[[plugins]]
repo = 'itchyny/screensaver.vim'

# [[plugins]]
# repo = 'dense-analysis/ale'

# [[plugins]]
# repo = 'MattesGroeger/vim-bookmarks'

[[plugins]]
repo = 'tomtom/tcomment_vim'

# gtag自動作成
[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = 'let g:gen_tags#statusline = 1'

# [[plugins]]
# repo = 'neoclide/coc.nvim'
# merged = 0
# build = 'yarn install --frozen-lockfile'
# hook_add = '''
# " Remap keys for gotos
# nmap <silent> gd <Plug>(coc-definition)
# nmap <silent> gy <Plug>(coc-type-definition)
# nmap <silent> gi <Plug>(coc-implementation)
# nmap <silent> gr <Plug>(coc-references)
#
# " Use K to show documentation in preview window
# nnoremap <silent> K :call <SID>show_documentation()<CR>
#
# " Add status line support, for integration with other plugin, checkout `:h coc-status`
# " set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
# '''
#
[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add = '''
let g:vista_sidebar_width = 40
let g:vista_echo_cursor = 0

" デフォルトのソースをvim_lspに設定
" let g:vista_default_executive = 'nvim_lsp'

" トグル(アウトラインを非表示の場合は表示、表示済みの場合は非表示に)
nnoremap <silent> <Leader>o :<C-u>Vista!!<CR>
'''

[[plugins]]
repo = 'skanehira/docker-compose.vim'

[[plugins]]
repo = 'mbbill/undotree'

# vim-lsp
[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
 
[[plugins]]
repo =  'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
let g:lsp_preview_autoclose = 1
let g:lsp_preview_float = 1
let g:lsp_diagnostics_float_cursor = 0
let g:lsp_virtual_text_enabled = 0
let g:lsp_diagnostics_echo_cursor = 1

nnoremap <leader><C-]> :LspDefinition<CR>
nnoremap <F12> :LspDefinition<CR>
" ログ出力用
let g:lsp_log_verbose = 1
let g:lsp_log_file = expand('~/vim-lsp.log')
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
merged = 0

# [[plugins]]
# repo = 'glacambre/firenvim'
# hook_post_update = '_ -> firenvim#install(0)'

# [[plugins]]
# repo = 'vim-scripts/dbext.vim'
# hook_add='''
# let g:dbext_default_profile_pltfrm = 'type=MYSQL:host=127.0.0.1:user=pltfrm:passwd=pltfrm:dbname=pltfrm'
# '''

[[plugins]]
repo = 'mileszs/ack.vim'
hook_add = '''
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
'''

# [[plugins]]
# repo = 'neovim/nvim-lsp'
# hook_post_source = 'call hook#add#nvim_lsp#load()'

# [[plugins]]
# repo = 'haorenW1025/diagnostic-nvim'
# depends = 'nvim-lsp'
# hook_post_source = 'call hook#add#diagnostic_nvim#load()'

# バッファ移動
[[plugins]]
repo = 'tpope/vim-unimpaired'

[[plugins]]
repo = 'easymotion/vim-easymotion'
